// OrbitControls - https://github.com/mrdoob/three.js/blob/master/examples/js/controls/
THREE.OrbitControls=function(e,t){function E(){return 2*Math.PI/60/60*n.autoRotateSpeed}function S(){return Math.pow(.95,n.zoomSpeed)}function x(e){if(n.enabled===false){return}e.preventDefault();if(e.button===0){if(n.noRotate===true){return}b=y.ROTATE;i.set(e.clientX,e.clientY)}else if(e.button===1){if(n.noZoom===true){return}b=y.DOLLY;l.set(e.clientX,e.clientY)}else if(e.button===2){if(n.noPan===true){return}b=y.PAN;u.set(e.clientX,e.clientY)}n.domElement.addEventListener("mousemove",T,false);n.domElement.addEventListener("mouseup",N,false)}function T(e){if(n.enabled===false)return;e.preventDefault();var t=n.domElement===document?n.domElement.body:n.domElement;if(b===y.ROTATE){if(n.noRotate===true)return;s.set(e.clientX,e.clientY);o.subVectors(s,i);n.rotateLeft(2*Math.PI*o.x/t.clientWidth*n.rotateSpeed);n.rotateUp(2*Math.PI*o.y/t.clientHeight*n.rotateSpeed);i.copy(s)}else if(b===y.DOLLY){if(n.noZoom===true)return;c.set(e.clientX,e.clientY);h.subVectors(c,l);if(h.y>0){n.dollyIn()}else{n.dollyOut()}l.copy(c)}else if(b===y.PAN){if(n.noPan===true)return;a.set(e.clientX,e.clientY);f.subVectors(a,u);n.pan(f);u.copy(a)}n.update()}function N(){if(n.enabled===false)return;n.domElement.removeEventListener("mousemove",T,false);n.domElement.removeEventListener("mouseup",N,false);b=y.NONE}function C(e){if(n.enabled===false||n.noZoom===true)return;var t=0;if(e.wheelDelta){t=e.wheelDelta}else if(e.detail){t=-e.detail}if(t>0){n.dollyOut()}else{n.dollyIn()}}function k(e){if(n.enabled===false){return}if(n.noKeys===true){return}if(n.noPan===true){return}var t=false;switch(e.keyCode){case n.keys.UP:n.pan(new THREE.Vector2(0,n.keyPanSpeed));t=true;break;case n.keys.BOTTOM:n.pan(new THREE.Vector2(0,-n.keyPanSpeed));t=true;break;case n.keys.LEFT:n.pan(new THREE.Vector2(n.keyPanSpeed,0));t=true;break;case n.keys.RIGHT:n.pan(new THREE.Vector2(-n.keyPanSpeed,0));t=true;break}if(t){n.update()}}function L(e){if(n.enabled===false){return}switch(e.touches.length){case 1:if(n.noRotate===true){return}b=y.TOUCH_ROTATE;i.set(e.touches[0].pageX,e.touches[0].pageY);break;case 2:if(n.noZoom===true){return}b=y.TOUCH_DOLLY;var t=e.touches[0].pageX-e.touches[1].pageX;var r=e.touches[0].pageY-e.touches[1].pageY;var s=Math.sqrt(t*t+r*r);l.set(0,s);break;case 3:if(n.noPan===true){return}b=y.TOUCH_PAN;u.set(e.touches[0].pageX,e.touches[0].pageY);break;default:b=y.NONE}}function A(e){if(n.enabled===false){return}e.preventDefault();e.stopPropagation();var t=n.domElement===document?n.domElement.body:n.domElement;switch(e.touches.length){case 1:if(n.noRotate===true){return}if(b!==y.TOUCH_ROTATE){return}s.set(e.touches[0].pageX,e.touches[0].pageY);o.subVectors(s,i);n.rotateLeft(2*Math.PI*o.x/t.clientWidth*n.rotateSpeed);n.rotateUp(2*Math.PI*o.y/t.clientHeight*n.rotateSpeed);i.copy(s);break;case 2:if(n.noZoom===true){return}if(b!==y.TOUCH_DOLLY){return}var r=e.touches[0].pageX-e.touches[1].pageX;var p=e.touches[0].pageY-e.touches[1].pageY;var d=Math.sqrt(r*r+p*p);c.set(0,d);h.subVectors(c,l);if(h.y>0){n.dollyOut()}else{n.dollyIn()}l.copy(c);break;case 3:if(n.noPan===true){return}if(b!==y.TOUCH_PAN){return}a.set(e.touches[0].pageX,e.touches[0].pageY);f.subVectors(a,u);n.pan(f);u.copy(a);break;default:b=y.NONE}}function O(){if(n.enabled===false){return}b=y.NONE}this.object=e;this.domElement=t!==undefined?t:document;this.enabled=true;this.target=new THREE.Vector3;this.center=this.target;this.noZoom=false;this.zoomSpeed=1;this.minDistance=0;this.maxDistance=Infinity;this.noRotate=false;this.rotateSpeed=1;this.noPan=false;this.keyPanSpeed=7;this.autoRotate=false;this.autoRotateSpeed=2;this.minPolarAngle=0;this.maxPolarAngle=Math.PI;this.noKeys=false;this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40};var n=this;var r=1e-6;var i=new THREE.Vector2;var s=new THREE.Vector2;var o=new THREE.Vector2;var u=new THREE.Vector2;var a=new THREE.Vector2;var f=new THREE.Vector2;var l=new THREE.Vector2;var c=new THREE.Vector2;var h=new THREE.Vector2;var p=0;var d=0;var v=1;var m=new THREE.Vector3;var g=new THREE.Vector3;var y={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5};var b=y.NONE;var w={type:"change"};this.rotateLeft=function(e){if(e===undefined){e=E()}d-=e};this.rotateUp=function(e){if(e===undefined){e=E()}p-=e};this.panLeft=function(e){var t=new THREE.Vector3;var n=this.object.matrix.elements;t.set(n[0],n[1],n[2]);t.multiplyScalar(-e);m.add(t)};this.panUp=function(e){var t=new THREE.Vector3;var n=this.object.matrix.elements;t.set(n[4],n[5],n[6]);t.multiplyScalar(e);m.add(t)};this.pan=function(e){var t=n.domElement===document?n.domElement.body:n.domElement;if(n.object.fov!==undefined){var r=n.object.position;var i=r.clone().sub(n.target);var s=i.length();s*=Math.tan(n.object.fov/2*Math.PI/180);n.panLeft(2*e.x*s/t.clientHeight);n.panUp(2*e.y*s/t.clientHeight)}else if(n.object.top!==undefined){n.panLeft(e.x*(n.object.right-n.object.left)/t.clientWidth);n.panUp(e.y*(n.object.top-n.object.bottom)/t.clientHeight)}else{console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.")}};this.dollyIn=function(e){if(e===undefined){e=S()}v/=e};this.dollyOut=function(e){if(e===undefined){e=S()}v*=e};this.update=function(){var e=this.object.position;var t=e.clone().sub(this.target);var n=Math.atan2(t.x,t.z);var i=Math.atan2(Math.sqrt(t.x*t.x+t.z*t.z),t.y);if(this.autoRotate){this.rotateLeft(E())}n+=d;i+=p;i=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,i));i=Math.max(r,Math.min(Math.PI-r,i));var s=t.length()*v;s=Math.max(this.minDistance,Math.min(this.maxDistance,s));this.target.add(m);t.x=s*Math.sin(i)*Math.sin(n);t.y=s*Math.cos(i);t.z=s*Math.sin(i)*Math.cos(n);e.copy(this.target).add(t);this.object.lookAt(this.target);d=0;p=0;v=1;m.set(0,0,0);if(g.distanceTo(this.object.position)>0){this.dispatchEvent(w);g.copy(this.object.position)}};this.domElement.addEventListener("contextmenu",function(e){e.preventDefault()},false);this.domElement.addEventListener("mousedown",x,false);this.domElement.addEventListener("mousewheel",C,false);this.domElement.addEventListener("DOMMouseScroll",C,false);this.domElement.addEventListener("keydown",k,false);this.domElement.addEventListener("touchstart",L,false);this.domElement.addEventListener("touchend",O,false);this.domElement.addEventListener("touchmove",A,false)};THREE.OrbitControls.prototype=Object.create(THREE.EventDispatcher.prototype)